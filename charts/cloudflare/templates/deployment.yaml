---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudflare.fullname" . }}
  labels:
    {{- include "cloudflare.labels" . | nindent 4 }}
    app: cloudflare
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      pod: cloudflare
      app: cloudflare
  template:
    metadata:
      annotations:
{{- with .Values.podAnnotations }}
{{- toYaml . | nindent 8 }}
{{- end }}
      labels:
        pod: cloudflare
        app: cloudflare
    spec:
      serviceAccountName: {{ include "cloudflare.fullname" . }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
      containers:
        - name: cloudflare
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          command:
            - cloudflare
            - tunnel
            - --no-autoupdate
            - --metrics
            - 0.0.0.0:2000
            - run
          ports:
            - name: cf-tun-metrics
              containerPort: 2000
              protocol: TCP
          env:
            - name: TUNNEL_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cloudflare.tokenSecretName }}
                  key: {{ .Values.cloudflare.tokenSecretKey }}
          resources:
{{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /ready
              port: 2000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
